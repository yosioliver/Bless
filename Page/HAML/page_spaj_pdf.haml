!!! 5

%html

    / HEAD
    
    %head
        = Haml::Engine.new(File.read("include_spajpdf_header.haml")).render
        %title BCA Life - BLESS, SPAJ PDF

        / JQUERY
        
        :javascript
        
            // IOS FUNCTION
        
            __functionIndexMap = {};
            <!-- core wrapper to client -->
            function calliOSFunction(functionName, successCallback, errorCallback, callInfo)
            {
                var url = 'js-frame:';
                callInfo.functionname = functionName;
                
                if (successCallback)
                {
                    if (typeof successCallback == 'function')
                    {
                        var callbackFuncName = createCallbackFunction(functionName + '_' + 'successCallback', successCallback);
                        callInfo.success = callbackFuncName;
                    }
                    else
                        callInfo.success = successCallback;
                }
                if (errorCallback)
                {
                    if (typeof errorCallback == 'function')
                    {
                        var callbackFuncName = createCallbackFunction(functionName + '_' + 'errorCallback', errorCallback);
                        callInfo.error = callbackFuncName;
                    }
                    else
                        callInfo.error = errorCallback;
                }
                
                url += JSON.stringify(callInfo);
                var iFrame = createIFrame(url);
                //remove the frame now
                iFrame.parentNode.removeChild(iFrame);
            }
            
            function createCallbackFunction (funcName, callbackFunc)
            {
                if (callbackFunc && callbackFunc.name != null && callbackFunc.name.length > 0)
                {
                    return callbackFunc.name;
                }
                
                if (typeof window[funcName+0] != 'function')
                {
                    window[funcName+0] = callbackFunc;
                    __functionIndexMap[funcName] = 0;
                    return funcName+0
                } else
                {
                    var maxIndex = __functionIndexMap[funcName];
                    var callbackFuncStr = callbackFunc.toString();

                    for (var i = 0; i <= maxIndex; i++)
                    {
                        var tmpName = funcName + i;
                        if (window[tmpName].toString() == callbackFuncStr)
                        return tmpName;
                    }

                    var newIndex = ++__functionIndexMap[funcName];
                    window[funcName+newIndex] = callbackFunc;
                    return funcName+newIndex;
                }
            }
            
            function createIFrame(src)
            {
                var rootElm = document.documentElement;
                var newFrameElm = document.createElement('IFRAME');
                newFrameElm.setAttribute('src',src);
                rootElm.appendChild(newFrameElm);
                return newFrameElm;
            }
            
            function onSuccess (ret)
            {
                if (ret)
                {
                    var returnRet = JSON.parse(ret);			

                    theTypeIs = Object.keys(returnRet.result)[0];

                    if (theTypeIs == 'readFromDB')
                    {					
                        boxSetter("#BoxSPAJNumber", returnRet.result.readFromDB[0].SPAJNumber);
                    }
                }
            }
            
            function onError (ret)
            {
                if (ret)
                {
                var returnRet = JSON.parse(ret);
                alert(returnRet.error);
                }
            }
            
            function readfromDB() 
            {
                var callInfo = {};
                callInfo.data = {};
                callInfo.data.CFFAnswers = {};
                callInfo.data.CFFAnswers.columns = 'elementID,Value,CFFID,CustomerID';
                callInfo.data.CFFAnswers.where = '';
                calliOSFunction('readfromDB:',onSuccess,onError, callInfo);					

                /*var dummyAll = '{"result":{"readFromDB":[{"NamaLengkap":"Iwan False","JenisIdentitas":"KTP","NomorIdentitasDiri":"1234567890","MasaBerlaku":"12-02-2019","TempatLahir":"Lhokseumawe","TanggalLahir":"09-01-1987","Usia":"29","Kewarganegaraan":"Indonesia","JenisKelamin":"P","Agama":"Kristen","PekerjaanUtama":"Karyawan Swasta","AlamatTinggal1":"Jalan","AlamatTinggal2":"Apa aja","AlamatTinggal3":"Disini Juga bisa","KotaTinggal":"Bekasi","KodePosTinggal":"17114","NomorTeleponPribadi":"021-299388171","NomorHPUtama":"08122234567","Email":"yosioliver@gmail.com","AlamatKantor1":"Thamrin Residence Office Park","AlamatKantor2":"Ruko A.12","KotaKantor":"Jakarta","KodePosKantor":"13776","TelpKantor":"021-12345654","HubunganDenganCalonTertanggung":"Suami","NomorNPWP":"1223334444"}]}}'

                var obj = JSON.parse(dummyAll);

                theTypeIs = Object.keys(obj.result)[0];

                if (theTypeIs == 'readFromDB')
                {
                    boxSetter("#BoxSPAJNumber", obj.result.readFromDB[0].NamaLengkap);				
                }
                else
                {
                    alert('No Data Available');
                }*/
            }

            function ReadData()
            {
                readfromDB();
            }
        
        
            // DOCUMENT READY
        
            $(document).ready(function()
            {
                // SECTION GENERAL

                boxGenerator("#TextSPAJNumber", 11, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyNumber", 11, boxTypeWithoutLabel, null);
                boxGenerator("#TextVANumber", 16, boxTypeWithoutLabel, null);

                // SECTION AGENT PROFILE

                boxGenerator("#TextAgentName", 16, boxTypeWithoutLabel, null);
                boxGenerator("#TextAgentCode", 11, boxTypeWithoutLabel, null);
                boxGenerator("#TextProductCode", 11, boxTypeWithoutLabel, null);
                boxGenerator("#TextLicenseNumber", 16, boxTypeWithoutLabel, null);
                boxGenerator("#DateActiveDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#DateActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#DateActiveYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#TextProductName", 16, boxTypeWithoutLabel, null);
                boxGenerator("#TextReferenceName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextBranchName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextBranchCode", 16, boxTypeWithoutLabel, null);
                boxGenerator("#TextArea", 16, boxTypeWithoutLabel, null);
                boxGenerator("#TextAgentID", 13, boxTypeWithoutLabel, null);
                boxGenerator("#DateReferenceDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#DateReferenceMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#DateReferenceYear", 4, boxTypeWithBottomLabel, labelYear);
 
                // SECTION POLICY HOLDER

                boxGenerator("#TextPolicyHolderCIN", 7, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderFullName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderID", 16, boxTypeWithoutLabel, null);
                boxGenerator("#DatePolicyHolderActiveDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#DatePolicyHolderActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#DatePolicyHolderActiveYear", 4, boxTypeWithBottomLabel, labelYear);
                lineGenerator("#TextPolicyHolderPlace", 11);
                boxGenerator("#DateHolderOfBirthDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#DateHolderOfBirthMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#DateHolderOfBirthYear", 4, boxTypeWithBottomLabel, labelYear);
                lineGenerator("#LinePolicyHolderPlace", 8);                                     
                boxGenerator("#BoxPolicyHolderAge", 2, boxTypeWithoutLabel, null);
                lineGenerator("#LinePolicyHolderWNA", 4);
                boxGenerator("#TextPolicyHolderCompany", 25, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderMainJob", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderWorkScope", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderPosition", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderJobDescription", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderSideJob", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderHomeAddress1", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderHomeAddress2", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderHomeCity", 2)
                boxGenerator("#TextPolicyHolderHomeCity", 19, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderHomePostalCode", 3)
                boxGenerator("#TextPolicyHolderHomePostalCode", 6, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderHomeTelephonePrefix", 2)
                boxGenerator("#TextPolicyHolderHomeTelephonePrefix", 4, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderHomeTelephoneInfix", 1)
                boxGenerator("#TextPolicyHolderHomeTelephoneInfix", 9, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderOfficeAddress1", 30, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderOfficeAddress2", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderOfficeCity", 2)
                boxGenerator("#TextPolicyHolderOfficeCity", 19, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderOfficePostalCode", 3)
                boxGenerator("#TextPolicyHolderOfficePostalCode", 6, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderOfficeTelephonePrefix", 2)
                boxGenerator("#TextPolicyHolderOfficeTelephonePrefix", 4, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderOfficeTelephoneInfix", 1)
                boxGenerator("#TextPolicyHolderOfficeTelephoneInfix", 9, boxTypeWithoutLabel, null);
                lineGenerator("#LinePolicyHolderOtherRelationship", 5);
                lineGenerator("#LinePolicyHolderOtherPurpose", 5);
                boxGenerator("#TextPolicyHolderEmail", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderTelephone1", 1)
                boxGenerator("#TextPolicyHolderTelephone1", 9, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderTelephone2", 1)
                boxGenerator("#TextPolicyHolderTelephone2", 9, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderNPWP", 16, boxTypeWithoutLabel, null);
                boxGenerator("#DatePolicyHolderNPWPActiveDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#DatePolicyHolderNPWPActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#DatePolicyHolderNPWPActiveYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#TextPolicyHolderSalary", 17, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderRevenue", 17, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderOtherIncome", 17, boxTypeWithoutLabel, null);
                boxGenerator("#TextPolicyHolderSource", 30, boxTypeWithoutLabel, null);
                
                // SECTION POLICY HOLDER

                // SUB A

                boxGenerator("#BoxInsuranceHolderCIN", 7, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderFullName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderID", 16, boxTypeWithoutLabel, null);
                lineGenerator("#LineInsuranceHolderOtherID", 11);
                boxGenerator("#BoxInsuranceHolderActiveDateDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxInsuranceHolderActiveDateMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxInsuranceHolderActiveDateYear", 4, boxTypeWithBottomLabel, labelYear);
                lineGenerator("#LineInsuranceHolderPlace", 8);
                boxGenerator("#BoxInsuranceHolderDateOfBirthDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxInsuranceHolderDateOfBirthMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxInsuranceHolderDateOfBirthYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxInsuranceHolderAge", 2, boxTypeWithoutLabel, null);
                lineGenerator("#LineInsuranceHolderWNA", 4);
                boxGenerator("#BoxInsuranceHolderCompany", 25, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderMainJob", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderWorkScope", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderPosition", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderJobDescription", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderSideJob", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderHomeAddress1", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderHomeAddress2", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderHomeCity", 2)
                boxGenerator("#BoxInsuranceHolderHomeCity", 19, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderHomePostalCode", 3)
                boxGenerator("#BoxInsuranceHolderHomePostalCode", 6, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderHomeTelephonePrefix", 2)
                boxGenerator("#BoxInsuranceHolderHomeTelephonePrefix", 4, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderHomeTelephoneInfix", 1)
                boxGenerator("#BoxInsuranceHolderHomeTelephoneInfix", 9, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderOfficeAddress1", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderOfficeAddress2", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderOfficeCity", 2)
                boxGenerator("#BoxInsuranceHolderOfficeCity", 19, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderOfficePostalCode", 3)
                boxGenerator("#BoxInsuranceHolderOfficePostalCode", 6, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderOfficeTelephonePrefix", 2)
                boxGenerator("#BoxInsuranceHolderOfficeTelephonePrefix", 4, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderOfficeTelephoneInfix", 1)
                boxGenerator("#BoxInsuranceHolderOfficeTelephoneInfix", 9, boxTypeWithoutLabel, null);
                lineGenerator("#LineInsuranceHolderOtherRelationship", 5);
                lineGenerator("#LineInsuranceHolderOtherPurpose", 5);
                boxGenerator("#BoxInsuranceHolderEmail", 30, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderTelephone1", 1)
                boxGenerator("#BoxInsuranceHolderTelephone1", 9, boxTypeWithoutLabel, null);
                labelGenerator("#LabelInsuranceHolderTelephone2", 1)
                boxGenerator("#BoxInsuranceHolderTelephone2", 9, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderNPWP", 16, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderNPWPActiveDateDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxInsuranceHolderNPWPActiveDateMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxInsuranceHolderNPWPActiveDateYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxInsuranceHolderSalary", 17, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderRevenue", 17, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderOtherIncome", 17, boxTypeWithoutLabel, null);
                boxGenerator("#BoxInsuranceHolderSource", 30, boxTypeWithoutLabel, null);
                
                // SUB B
                
                boxGenerator("#TextPolicyHolderCompanyName", 30, boxTypeWithoutLabel, null);
                lineGenerator("#LinePolicyHolderCompanyOther", 11);
                boxGenerator("#TextPolicyHolderCompanyNoAnggaranDasar", 21, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyAnggaranDateOfExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanyAnggaranDateOfExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanyAnggaranDateOfExpiredYear", 4, boxTypeWithBottomLabel, labelYear); 
                boxGenerator("#BoxPolicyHolderCompanyNoSuratIjinUsaha", 21, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanySIUPDateOfExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanySIUPDateOfExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanySIUPDateOfExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxPolicyHolderCompanyNoTDP", 21, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyTDPDateOfExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanyTDPDateOfExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanyTDPDateOfExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxPolicyHolderCompanyNoSKDP", 21, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanySKDPDateOfExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanySKDPDateOfExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanySKDPDateOfExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxPolicyHolderCompanyNoNPWP", 16, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyNoNPWPDateDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanyNoNPWPDateMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanyNoNPWPDateYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxPolicyHolderCompanySector", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyAddress", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyCity", 19, boxTypeWithoutLabel, null);
                labelGenerator("#LabelPolicyHolderCompanyPostalCode", 3);
                boxGenerator("#BoxPolicyHolderCompanyPostalCode", 6, boxTypeWithoutLabel, null);
                
                // SECTION COMPANY REPRESENTATIVE
                boxGenerator("#BoxPolicyHolderCompanyRepresentativeFullName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyRepresentativePosition", 28, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyRepresentativeID", 16, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderCompanyRepresentativeActiveDateDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxPolicyHolderCompanyRepresentativeActiveDateMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxPolicyHolderCompanyRepresentativeActiveDateYear", 4, boxTypeWithBottomLabel, labelYear);
                lineGenerator("#LinePolicyHolderCompanyRepresentativeOtherRelationship", 19);
                lineGenerator("#LinePolicyHolderCompanyRepresentativeOtherPurpose", 6);

                // SECTION ILLUSTRATION
                
                boxGenerator("#BoxIllustrationAgentName", 30, boxTypeWithoutLabel, null);
                boxGenerator("#BoxIllustrationNumber", 10, boxTypeWithoutLabel, null);
                boxGenerator("#BoxIllustrationDateDay", 2, boxTypeWithBottomLabel, labelDay);
                boxGenerator("#BoxIllustrationDateMonth", 2, boxTypeWithBottomLabel, labelMonth);
                boxGenerator("#BoxIllustrationDateYear", 4, boxTypeWithBottomLabel, labelYear);
                boxGenerator("#BoxIllustrationAgentCode", 13, boxTypeWithoutLabel, null);
                
                // SECTION PREMI PAYMENT
                
                labelGenerator("#LabelPremiPaymentFrequencyYear", 5)
                labelGenerator("#LabelPremiPaymentFrequencySemester", 4)
                labelGenerator("#LabelPremiPaymentFrequencyTriwulan", 4)
                labelGenerator("#LabelPremiPaymentFrequencyMonth", 4)
                labelGenerator("#LabelPremiPaymentFrequencyFull", 4)
                labelGenerator("#LabelPremiPaymentPolicyHolder", 5)
                labelGenerator("#LabelPremiPaymentPolicyHolderCompany", 12)
                labelGenerator("#LabelPremiPaymentPolicyHolderTertanggung", 5)
                labelGenerator("#LabelPremiPaymentPolicyHolderThirdParty", 18)
                labelGenerator("#LabelPremiPaymentDebitAccount", 5)
                labelGenerator("#LabelPremiPaymentCreditCardAccount", 9)  
                labelGenerator("#LabelPremiPaymentOtherAccount", 5) 
                lineGenerator("#LinePremiPaymentOtherAccount", 9);
                boxGenerator("#BoxPremiDescriptionCreditCardHolderName", 27, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPremiDescriptionDebitCreditNumber", 27, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPremiDescriptionBankName", 27, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPremiDescriptionBankBranch", 27, boxTypeWithoutLabel, null);

                // SECTION HEALTH
                
                boxGenerator("#BoxProspectiveInsuredHeight", 3, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderHeight", 3, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsuredWeight", 3, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderWeight", 3, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsuredSmokeAmount", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolderSmokeAmount", 2, boxTypeWithoutLabel, null);
                
                boxGenerator("#BoxProspectiveInsured1Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsured1Year", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsured2Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsured2Year", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsured3Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsured3Year", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder1Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder1Year", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder2Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder2Year", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder3Month", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxPolicyHolder3Year", 2, boxTypeWithoutLabel, null);
                
                boxGenerator("#BoxProspectiveInsuredBabyHeight", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsuredBabyWeight", 2, boxTypeWithoutLabel, null);
                boxGenerator("#BoxProspectiveInsuredPregnancyAge", 2, boxTypeWithoutLabel, null);

                // SECTION AGREEMENT
                
                lineGenerator("#LineSignedPlace", 8);
                lineGenerator("#LineSignedDateDay", 2);
                lineGenerator("#LineSignedDateMonth", 2);
                lineGenerator("#LineSignedDateYear", 4);

                // SET TEXT

                //boxSetter("TextSPAJNumber", "Andy Phan", boxTypeStraight);
                //boxSetter("Active", "13-08-2016", boxTypeDate);
                //boxSetter("PolicyHolderOfficeTelephone", "021-7358326", boxTypeTelephone);

                // GET TEXT

                //alert(boxGetter("TextSPAJNumber", 11));
            });


    / BODY

    %body#A4

        / HEADER

        %header
            %h1 SURAT PENGAJUAN ASURANSI JIWA (SPAJ)
            %img{:src => "../../Resource/Logo/logo_bcalife.svg"}
            %br

        / MAIN

        %main
            %section#SectionGeneral
                = Haml::Engine.new(File.read("include_spajpdf_general.haml")).render
            %section#SectionAgentProfile
                = Haml::Engine.new(File.read("include_spajpdf_salesprofile.haml")).render
            %section#SectionPolicyHolder
                = Haml::Engine.new(File.read("include_spajpdf_policyholder.haml")).render
            %section#SectionCompanyRepresentative
                = Haml::Engine.new(File.read("include_spajpdf_companyrepresentative.haml")).render
            %section#SectionInsuranceHolder
                = Haml::Engine.new(File.read("include_spajpdf_prospectiveinsured.haml")).render
            %section#SectionProspectiveBeneficiariesList
                = Haml::Engine.new(File.read("include_spajpdf_prospectivebeneficiarieslist.haml")).render
            %section#SectionIllustration
                = Haml::Engine.new(File.read("include_spajpdf_illustration.haml")).render
            %section#SectionIPremiPayment
                = Haml::Engine.new(File.read("include_spajpdf_premipayment.haml")).render
            %section#SectionProspectiveHealth
                = Haml::Engine.new(File.read("include_spajpdf_health.haml")).render
            %section#DeclarationAgreement
                = Haml::Engine.new(File.read("include_spajpdf_declaration.haml")).render
            %section#SectionAgreement
                = Haml::Engine.new(File.read("include_spajpdf_agreement.haml")).render