!!! 5

%html

	/ HEAD

	%head
		= Haml::Engine.new(File.read("include_spajpdf_header.haml")).render
		%title BCA Life - BLESS, SPAJ PDF

		/ JQUERY

		:javascript

			// DOCUMENT READY

			$(document).ready(function()
			{
				var jsonNoob = '{"result":{"readFromDB":[{"elementID":"DateSigned","Value":"16/12/2016"},{"elementID":"DateActiveAgentExpired","Value":"16/12/2016"}]}}'
				
				
				var jsonDummy = '{"result":{"readFromDB":[{"elementID":"TextPolicyHolderSPAJProposalCompanyName1","Value":"Info Connect sdn bhd"},{"elementID":"TextPolicyHolderSPAJProposalPolicyNumber1","Value":"123456"},{"elementID":"DatePolicyHolderSPAJProposalPublished1","Value":"01/09/2013"},{"elementID":"TextPolicyHolderSPAJProposalBasicSumAssured1","Value":"30000"},{"elementID":"TextPolicyHolderSPAJProposalDecision1","Value":"oke !"},{"elementID":"RadioButtonProspectiveInsuredJunkie","Value":"false"},{"elementID":"RadioButtonPolicyHolderExtremeSport","Value":"true"},{"elementID":"RadioButtonPolicyHolderAbroad","Value":"false"},{"elementID":"TextPolicyHolderAbroad","Value":"false"},{"elementID":"TextPolicyHolderAbroad","Value":"false"},{"elementID":"TextProspectiveInsuredAbroad","Value":"false"},{"elementID":"TextProspectiveInsuredVisionDiseaseName","Value":"belekan"},{"elementID":"TextProspectiveInsuredVisionSickFrom","Value":"01/07/2016"},{"elementID":"TextProspectiveInsuredVisionSickDuration","Value":"2 minggu"},{"elementID":"TextProspectiveInsuredVisionDoctorName","Value":"anto"},{"elementID":"TextProspectiveInsuredVisionHosipital","Value":"rsib"},{"elementID":"TextProspectiveInsuredVisionAddress","Value":"bintaro"},{"elementID":"TextProspectiveInsuredVisionTelephone","Value":"123"},{"elementID":"TextProspectiveInsuredENTDiseaseName","Value":"congean"},{"elementID":"TextProspectiveInsuredENTSickFrom","Value":"02/08/2017"},{"elementID":"TextProspectiveInsuredRespiratoryDiseaseName","Value":"pilek"},{"elementID":"TextProspectiveInsuredRespiratorySickFrom","Value":"03/09/2018"},{"elementID":"TextProspectiveInsuredCardiacDiseaseName","Value":"sesek"},{"elementID":"TextProspectiveInsuredCardiacDoctorName","Value":"surianto"},{"elementID":"TextPolicyHolderVisionDiseaseName","Value":"belekan"},{"elementID":"TextPolicyHolderVisionSickFrom","Value":"01/07/2016"},{"elementID":"TextPolicyHolderVisionSickDuration","Value":"2 minggu"},{"elementID":"TextPolicyHolderVisionDoctorName","Value":"anto"},{"elementID":"TextPolicyHolderVisionHosipital","Value":"rsib"},{"elementID":"TextPolicyHolderVisionAddress","Value":"bintaro"},{"elementID":"TextPolicyHolderVisionTelephone","Value":"123"},{"elementID":"TextPolicyHolderENTDiseaseName","Value":"congean"},{"elementID":"TextPolicyHolderRespiratoryDiseaseName","Value":"pilek"},{"elementID":"TextPolicyHolderCardiacDiseaseName","Value":"sesek"},{"elementID":"TextPolicyHolderCardiacDoctorName","Value":"surianto"},{"elementID":"AreaKanwilAgent","Value":"jakarta"},{"elementID":"TextPolicyHolderHandphone1","Value":"0818-146139"},{"elementID":"TextBeneficiariesListFullName1","Value":"Satri Kharima"},{"elementID":"DateBeneficiariesListBirthday1","Value":"01/02/1990"},{"elementID":"SelectBeneficiariesListRelationship1","Value":"family"},{"elementID":"RadioButtonBeneficiariesListSex1","Value":"male"},{"elementID":"SelectBeneficiariesListNationality1","Value":"indonesia"},{"elementID":"TextBeneficiariesListFullName1","Value":"Faiz Baraja"},{"elementID":"DateBeneficiariesListBirthday1","Value":"02/03/1990"},{"elementID":"SelectBeneficiariesListRelationship1","Value":"family"},{"elementID":"RadioButtonBeneficiariesListSex1","Value":"male"},{"elementID":"SelectBeneficiariesListNationality1","Value":"indonesia"},{"elementID":"TextBeneficiariesListFullName1","Value":"Erwin Lim"},{"elementID":"DateBeneficiariesListBirthday1","Value":"03/04/1990"},{"elementID":"SelectBeneficiariesListRelationship1","Value":"family"},{"elementID":"RadioButtonBeneficiariesListSex1","Value":"male"},{"elementID":"SelectBeneficiariesListNationality1","Value":"indonesia"},{"elementID":"TextPolicyHolderFullName","Value":"Emma Green - Geller"}]}}'

				// SECTION GENERAL

				boxGenerator("#TextSPAJNumber", 11, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyNumber", 11, boxTypeWithBottomNote, "(Dilenkapi oleh Kantor Pusat)");
				boxGenerator("#TextVANumber", 16, boxTypeWithoutLabel, null);

				// SECTION AGENT PROFILE

				boxGenerator("#TextAgentName", 16, boxTypeWithoutLabel, null);
				boxGenerator("#TextAgentCode", 11, boxTypeWithoutLabel, null);
				boxGenerator("#TextProductCode", 11, boxTypeWithoutLabel, null);
				boxGenerator("#TextLicenseNumber", 16, boxTypeWithoutLabel, null);
				boxGenerator("#DateActiveAgentExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateActiveAgentExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateActiveAgentExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextProductName", 29, boxTypeWithoutLabel, null);
				boxGenerator("#TextReferenceName", 29, boxTypeWithoutLabel, null);
				boxGenerator("#TextBranchName", 29, boxTypeWithoutLabel, null);
				boxGenerator("#TextBranchCode", 16, boxTypeWithoutLabel, null);
				boxGenerator("#AreaKanwilAgent", 16, boxTypeWithoutLabel, null);
				boxGenerator("#TextAgentID", 13, boxTypeWithoutLabel, null);
				boxGenerator("#DateReferenceDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateReferenceMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateReferenceYear", 4, boxTypeWithBottomLabel, labelYear);

				// SECTION POLICY HOLDER

				boxGenerator("#TextPolicyHolderCIN", 7, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderFullName", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderIDNumber", 16, boxTypeWithoutLabel, null);
				lineGenerator("#TextPolicyHolderIDTypeOther", 11);
				boxGenerator("#DatePolicyHolderActiveDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderActiveYear", 4, boxTypeWithBottomLabel, labelYear);
				lineGenerator("#TextPolicyHolderBirthPlace", 11);
				boxGenerator("#DatePolicyHolderBirthDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderBirthMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderBirthYear", 4, boxTypeWithBottomLabel, labelYear);
				lineGenerator("#LinePolicyHolderPlace", 8);                                     
				boxGenerator("#TextPolicyHolderAge", 2, boxTypeWithoutLabel, null);
				lineGenerator("#TextPolicyHolderWNA", 4);
				boxGenerator("#TextPolicyHolderCompany", 25, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderMainJob", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderWorkScope", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderPosition", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderJobDescription", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderSideJob", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderHomeAddress1", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderHomeAddress2", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHomeCity", 2)
				boxGenerator("#TextPolicyHolderHomeCity", 19, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHomePostalCode", 3)
				boxGenerator("#TextPolicyHolderHomePostalCode", 6, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHomeTelephonePrefix", 2)
				boxGenerator("#TextPolicyHolderHomeTelephonePrefix", 4, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHomeTelephoneInfix", 1)
				boxGenerator("#TextPolicyHolderHomeTelephoneInfix", 9, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderOfficeAddress1", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderOfficeAddress2", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderOfficeCity", 2)
				boxGenerator("#TextPolicyHolderOfficeCity", 19, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderOfficePostalCode", 3)
				boxGenerator("#TextPolicyHolderOfficePostalCode", 6, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderOfficeTelephonePrefix", 2)
				boxGenerator("#TextPolicyHolderOfficeTelephonePrefix", 4, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderOfficeTelephoneInfix", 1)
				boxGenerator("#TextPolicyHolderOfficeTelephoneInfix", 9, boxTypeWithoutLabel, null);
				lineGenerator("#LinePolicyHolderOtherRelationship", 5);
				lineGenerator("#TextPolicyHolderInsurancePurposeOther", 5);
				boxGenerator("#TextPolicyHolderEmail", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHandhone1", 1)
				boxGenerator("#TextPolicyHolderHandphone1", 13, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderHandhone2", 1)
				boxGenerator("#TextPolicyHolderHandphone2", 13, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderNPWP", 16, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderNPWPActiveDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderNPWPActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderNPWPActiveYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextPolicyHolderSalary", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderRevenue", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderOtherIncome", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderSource", 30, boxTypeWithoutLabel, null);

				// SECTION POLICY HOLDER

				// SUB A

				boxGenerator("#TextProspectiveInsuredCIN", 7, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredFullName", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredIDNumber", 16, boxTypeWithoutLabel, null);
				lineGenerator("#LineProspectiveInsuredIDTypeOther", 11);
				boxGenerator("#DateProspectiveInsuredActiveDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateProspectiveInsuredActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateProspectiveInsuredActiveYear", 4, boxTypeWithBottomLabel, labelYear);
				lineGenerator("#TextProspectiveInsuredBirthPlace", 8);
				boxGenerator("#DateProspectiveInsuredBirthDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateProspectiveInsuredBirthMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateProspectiveInsuredBirthYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextProspectiveInsuredAge", 2, boxTypeWithoutLabel, null);
				lineGenerator("#LineProspectiveInsuredNationalityWNA", 4);
				boxGenerator("#TextProspectiveInsuredCompany", 25, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredMainJob", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredWorkScope", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredPosition", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredJobDescription", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredSideJob", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredHomeAddress1", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredHomeAddress2", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHomeCity", 2)
				boxGenerator("#TextProspectiveInsuredHomeCity", 19, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHomePostalCode", 3)
				boxGenerator("#TextProspectiveInsuredHomePostalCode", 6, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHomeTelephonePrefix", 2)
				boxGenerator("#TextProspectiveInsuredHomeTelephonePrefix", 4, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHomeTelephoneInfix", 1)
				boxGenerator("#TextProspectiveInsuredHomeTelephoneInfix", 9, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredOfficeAddress1", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredOfficeAddress2", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredOfficeCity", 2)
				boxGenerator("#TextProspectiveInsuredOfficeCity", 19, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredOfficePostalCode", 3)
				boxGenerator("#TextProspectiveInsuredOfficePostalCode", 6, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredOfficeTelephonePrefix", 2)
				boxGenerator("#TextProspectiveInsuredOfficeTelephonePrefix", 4, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredOfficeTelephoneInfix", 1)
				boxGenerator("#TextProspectiveInsuredOfficeTelephoneInfix", 9, boxTypeWithoutLabel, null);
				lineGenerator("#LineProspectiveInsuredOtherRelationship", 5);
				lineGenerator("#TextProspectiveInsuredInsurancePurposeOther", 5);
				boxGenerator("#TextProspectiveInsuredEmail", 30, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHandhone1", 1)
				boxGenerator("#TextProspectiveInsuredHandphone1", 13, boxTypeWithoutLabel, null);
				labelGenerator("#LabelProspectiveInsuredHandhone2", 1)
				boxGenerator("#TextProspectiveInsuredHandphone2", 13, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredNPWP", 16, boxTypeWithoutLabel, null);
				boxGenerator("#DateProspectiveInsuredNPWPActiveDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateProspectiveInsuredNPWPActiveMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateProspectiveInsuredNPWPActiveYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextProspectiveInsuredSalary", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredRevenue", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredOtherIncome", 17, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredSource", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredFundingSource", 27, boxTypeWithoutLabel, null);

				// SUB B 

				boxGenerator("#TextPolicyHolderCompanyName", 30, boxTypeWithoutLabel, null);
				lineGenerator("#LinePolicyHolderCompanyTypeOther", 11);
				lineGenerator("#LinePolicyHolderComanyIDTypeOther", 11);
				boxGenerator("#TextPolicyHolderCompanyNoAnggaranDasar", 21, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanyNoAnggaranDasarExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanyNoAnggaranDasarExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanyNoAnggaranDasarExpiredYear", 4, boxTypeWithBottomLabel, labelYear); 
				boxGenerator("#TextPolicyHolderCompanyNoSIUP", 21, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanySIUPExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanySIUPExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanySIUPExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextPolicyHolderCompanyNoTDP", 21, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanyNoTDPExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanyNoTDPExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanyNoTDPExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextPolicyHolderCompanyNoSKDP", 21, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanyNoSKDPExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanyNoSKDPExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanyNoSKDPExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextPolicyHolderCompanyNoNPWP", 16, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanyNoNPWPDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanyNoNPWPMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanyNoNPWPYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextPolicyHolderCompanySector", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderCompanyAddress", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderCompanyCity", 19, boxTypeWithoutLabel, null);
				labelGenerator("#LabelPolicyHolderCompanyPostalCode", 3);
				boxGenerator("#TextPolicyHolderCompanyPostalCode", 6, boxTypeWithoutLabel, null);

				// SECTION COMPANY REPRESENTATIVE

				boxGenerator("#TextPolicyHolderCompanyRepresentativeFullName", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderCompanyRepresentativePosition", 28, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderCompanyRepresentativeIDNumber", 16, boxTypeWithoutLabel, null);
				boxGenerator("#DatePolicyHolderCompanyRepresentativeIDExpiredDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DatePolicyHolderCompanyRepresentativeIDExpiredMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DatePolicyHolderCompanyRepresentativeIDExpiredYear", 4, boxTypeWithBottomLabel, labelYear);
				lineGenerator("#TextPolicyHolderCompanyRepresentativeRelationshipOther", 19);
				lineGenerator("#TextPolicyHolderCompanyRepresentativeInsurancePurposeOther", 5);

				// SECTION ILLUSTRATION

				boxGenerator("#TextIllustrationAgentName", 30, boxTypeWithoutLabel, null);
				boxGenerator("#TextIllustrationNumber", 30, boxTypeWithoutLabel, null);
				boxGenerator("#DateIllustrationDay", 2, boxTypeWithBottomLabel, labelDay);
				boxGenerator("#DateIllustrationMonth", 2, boxTypeWithBottomLabel, labelMonth);
				boxGenerator("#DateIllustrationYear", 4, boxTypeWithBottomLabel, labelYear);
				boxGenerator("#TextIllustrationAgentCode", 13, boxTypeWithoutLabel, null);

				// SECTION PREMI PAYMENT

				labelGenerator("#LabelPremiPaymentFrequencyYear", 5)
				labelGenerator("#LabelPremiPaymentFrequencySemester", 4)
				labelGenerator("#LabelPremiPaymentFrequencyTriwulan", 4)
				labelGenerator("#LabelPremiPaymentFrequencyMonth", 4)
				labelGenerator("#LabelPremiPaymentFrequencyFull", 4)
				labelGenerator("#LabelPremiPaymentPayorHolder", 5)
				labelGenerator("#LabelPremiPaymentPayorCompany", 12)
				labelGenerator("#LabelPremiPaymentPayorInsured", 5)
				labelGenerator("#LabelPremiPaymentPayorThirdParty", 18)
				labelGenerator("#LabelPremiPaymentDebitAccount", 5)
				labelGenerator("#LabelPremiPaymentCreditCardAccount", 9)  
				labelGenerator("#LabelPremiPaymentOtherAccount", 5)
				lineGenerator("#LinePremiPaymentOtherAccount", 9);
				boxGenerator("#TextPremiPaymentBankAccountDetailsName", 27, boxTypeWithoutLabel, null);
				boxGenerator("#TextPremiPaymentBankAccountDetailsNumber", 27, boxTypeWithoutLabel, null);
				boxGenerator("#TextPremiPaymentBankAccountDetailsBankName", 27, boxTypeWithoutLabel, null);
				boxGenerator("#TextPremiPaymentBankAccountDetailsBankBranch", 27, boxTypeWithoutLabel, null);

				// SECTION BENEFICIARIES LIST
				
				tablePDFBeneficiariesListGenerator("TableBeneficiariesList", 5);
				
				// SECTION HEALTH

				boxGenerator("#TextProspectiveInsuredHeight", 3, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderHeight", 3, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredWeight", 3, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderWeight", 3, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredSmokeAmount", 2, boxTypeWithoutLabel, null);
				boxGenerator("#TextPolicyHolderSmokeAmount", 2, boxTypeWithoutLabel, null);

				tableHealthGenerator("TableProspectiveInsuredIllness", 3);
				tableHealthGenerator("TablePolicyHolderIllness", 3);
				tablePDFSPAJProposalGenerator("TableProspectiveInsuredSPAJProposal", 3);
				tablePDFSPAJProposalGenerator("TablePolicyHolderSPAJProposal", 3);

				boxGenerator("#TextProspectiveInsuredBabyHeight", 2, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredBabyWeight", 2, boxTypeWithoutLabel, null);
				boxGenerator("#TextProspectiveInsuredPregnantWeek", 2, boxTypeWithoutLabel, null);

				// SECTION AGREEMENT

				lineGenerator("#TextSignedPlace", 8);
				lineGenerator("#DateSignedDay", 2);
				lineGenerator("#DateSignedMonth", 2);
				lineGenerator("#DateSignedYear", 4);  

				// FOOTER AND HEADER

				headerGenerator(".HeaderGeneral table");
				footerGenerator("OP/NB/0104/031602", "8");


				// SETTER

				// var objectContent = JSON.parse(jsonDummy);
				// getFromDatabase(objectContent.result.readFromDB, stringPageTypePDF);				
				
				// setHeader("123456");
			});


	/ BODY

	%body#A4

		/ HEADER
 
		%header
			%h1 SURAT PENGAJUAN ASURANSI JIWA (SPAJ)
			%img{:src => "../../Resource/Logo/logo_bcalife.svg"}
			%br


		/ MAIN

		%main
			%section#SectionGeneral
				= Haml::Engine.new(File.read("include_spajpdf_general.haml")).render
			%section#SectionAgentProfile
				= Haml::Engine.new(File.read("include_spajpdf_salesprofile.haml")).render
			%section#SectionPolicyHolder
				= Haml::Engine.new(File.read("include_spajpdf_policyholder.haml")).render
			%section#SectionCompanyRepresentative
				= Haml::Engine.new(File.read("include_spajpdf_companyrepresentative.haml")).render
			%section#SectionProspectiveInsured
				= Haml::Engine.new(File.read("include_spajpdf_prospectiveinsured.haml")).render
			%section#SectionProspectiveBeneficiariesList
				= Haml::Engine.new(File.read("include_spajpdf_prospectivebeneficiarieslist.haml")).render
			%section#SectionIllustration
				= Haml::Engine.new(File.read("include_spajpdf_illustration.haml")).render
			%section#SectionIPremiPayment
				= Haml::Engine.new(File.read("include_spajpdf_premipayment.haml")).render
			%section#SectionProspectiveHealth
				= Haml::Engine.new(File.read("include_spajpdf_health.haml")).render
			%section#DeclarationAgreement
				= Haml::Engine.new(File.read("include_spajpdf_declaration.haml")).render
			%section#SectionAgreement
				= Haml::Engine.new(File.read("include_spajpdf_agreement.haml")).render
			%section.SectionFooter
				= Haml::Engine.new(File.read("footer_spajpdf_last.haml")).render